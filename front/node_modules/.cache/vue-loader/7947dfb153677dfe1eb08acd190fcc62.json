{"remainingRequest":"/Applications/nodejs/barbershop_front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/nodejs/barbershop_front/src/components/Login.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Applications/nodejs/barbershop_front/src/components/Login.vue","mtime":1615306830541},{"path":"/Applications/nodejs/barbershop_front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/nodejs/barbershop_front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Applications/nodejs/barbershop_front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Applications/nodejs/barbershop_front/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Applications/nodejs/barbershop_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/nodejs/barbershop_front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY29udGVudCB7CiAgICBiYWNrZ3JvdW5kOiB1cmwoLi4vYXNzZXRzL3JlZ2lzdHJlLmpwZykgbm8tcmVwZWF0OwogICAgLW1vei1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyAvKiBGaXJlZm94IDMuNisgKi8KICAgIC13ZWJraXQtYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsgLyogU2FmYXJpIDMuMSsg0LggQ2hyb21lIDQuMCsgKi8KICAgIC1vLWJhY2tncm91bmQtc2l6ZTogY292ZXI7IC8qIE9wZXJhIDkuNisgKi8KICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7IC8qINCh0L7QstGA0LXQvNC10L3QvdGL0LUg0LHRgNCw0YPQt9C10YDRiyAqLwogICAgaGVpZ2h0OiAxMDB2aDsKfQoKI3JlZ2lzdHJlLWNhcmQgewogICAgdG9wOiAzMCU7CiAgICBsZWZ0OiA1MCU7CiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsKfQoKI2NhcmQtcmVmcmVzaC1wd2QgewogICAgcGFkZGluZzogMDsKfQoK"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-app >\n    <v-main class='content'>\n    <v-card color=\"rgba(0, 0, 0, 0.300)\" dark width=\"400\" id=\"registre-card\">\n      <v-card-title class=\"pb-0\"> \n        <h1>Личный кабинет</h1>\n      </v-card-title>\n      <v-card-text>\n        <v-form> \n          <v-text-field \n            label=\"Email или моб.телефон\" \n            v-model=\"username\"\n            prepend-icon=\"mdi-account-circle\"\n          />\n          <v-text-field \n            :type=\"password ? 'text' : 'password'\" \n            label=\"Пароль\"\n            v-model=\"password\"\n            prepend-icon=\"mdi-lock\"\n            :append-icon=\"password ? 'mdi-eye' : 'mdi-eye-off'\"\n            @click:append=\"password = !password\"\n          />\n        </v-form>\n        <p v-show=\"badLogin\" style=\"color: red\" > Неверный email/телефон или пароль</p>\n      </v-card-text>\n      <v-card-text id=\"card-refresh-pwd\">\n          <router-link to=\"/Refresh\">Забыли пароль?</router-link>\n      </v-card-text>\n      <v-divider></v-divider>\n      <v-card-actions>\n        <v-btn color=\"grey\" to=\"/Registration\">Регистрация</v-btn>\n        <v-btn @click=\"login()\"\n        color=\"grey\">Вход</v-btn>\n      </v-card-actions>\n    </v-card>\n    </v-main>\n    </v-app>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport store from \"@/store\";\n//import { use } from 'vue/types/umd';\nexport default {\n   data: () => ({\n     username: null,\n     password: null,\n     adr: null,\n     badLogin: false\n   }),\n  \n\n  methods: {\n  login: function () {\n    \n    var params = new URLSearchParams();\n     params.append('username', this.username);\n     params.append('password', this.password);\n  \n    axios\n      .post(\"http://localhost:8080/login\",params, {\n        withCredentials: true,\n        auth:{\n        username: this.username,\n        password: this.password }})\n    \n      .then((response) => {\n        this.adr = response.data;\n        this.badLogin = false;\n        store.user = this.username;\n        this.$router.push(\"/Private\");\n      })\n      .catch((error) => {\n        if (error.response.status == 500) {\n            this.badLogin = true;\n        }\n      })\n  }\n}\n  }\n</script>\n\n<style>\n.content {\n    background: url(../assets/registre.jpg) no-repeat;\n    -moz-background-size: cover; /* Firefox 3.6+ */\n    -webkit-background-size: cover; /* Safari 3.1+ и Chrome 4.0+ */\n    -o-background-size: cover; /* Opera 9.6+ */\n    background-size: cover; /* Современные браузеры */\n    height: 100vh;\n}\n\n#registre-card {\n    top: 30%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n\n#card-refresh-pwd {\n    padding: 0;\n}\n\n</style>"]}]}